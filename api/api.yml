swagger: "2.0"
info:
  title: CtoFunds REST API
  description: |
    定义CtoFunds服务端的API，REST风格，包括请求响应URI、状态和报文格式
  version: "1.0"
  contact:
    name: 唐睿
    email: "rui.tang@ctofunds.com"
host: www.ctofunds.com
schemes:
  - https
  - http
basePath: /api/v1
tags:
  - name: security
    description: 安全相关API
  - name: user
    description: 用户API
  - name: startup
    description: 创业公司API
  - name: founder
    description: 创业公司创始人API，只是创业公司元信息的一部分，并不是用户
  - name: topic
    description: 问答主题API
  - name: reply
    description: 问答回复API
  - name: comment
    description: 主题或回复的评论API
  - name: misc
    description: 杂类API
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  token:
    description: 通过登录/login得到的JWT token
    type: apiKey
    name: X-AUTH-TOKEN
    in: header
security:
  - token: []
paths:
  /login/:
    post:
      summary: 用户登录
      description: |
        通过邮件地址和密码获取token
      tags:
        - security
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthenticationRequest'
      responses:
        200:
          description: 成功获取token
          schema:
            $ref: '#/definitions/AuthenticationResponse'
        401:
          description: 用户名或密码有问题
          schema:
            $ref: '#/definitions/Error'

  /logout/:
    post:
      summary: 用户登出
      description: |
        用户登出，使token无效
      tags:
        - security
      responses:
        200:
          description: 成功登出
        400:
          description: token无效
          schema:
            $ref: '#/definitions/Error'

  /refresh/:
    post:
      summary: 刷新token
      description: |
        在token的有效时间内刷新token
      tags:
        - security
      responses:
        200:
          description: 成功刷新token
        400:
          description: token无效
          schema:
            $ref: '#/definitions/Error'

  /forgotpassword/{email}:
    post:
      summary: 忘记密码
      description: |
        忘记密码
      tags:
        - security
      parameters:
        - name: email
          in: path
          description: 邮箱地址
          required: true
          type: string
      responses:
        200:
          description: 生成含token的软件并发送给用户邮件

  /sendmail/:
    post:
      summary: 发送邮件
      description: |
        发送邮件
      tags:
        - misc
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendEmailRequest'
      responses:
        200:
          description: 成功发送

  /emails/{name}/:
    head:
      summary: 检查邮箱地址是否被用
      description: |
        检查邮箱地址是否被用
      tags:
        - misc
      parameters:
        - name: name
          in: path
          description: 邮箱地址
          required: true
          type: string
      responses:
        200:
          description: 邮箱已被占用
        404:
          description: 邮箱未被占用

  /usernames/{name}/:
    head:
      summary: 检查用户名是否被用
      description: |
        检查用户名是否被用
      tags:
        - misc
      parameters:
        - name: name
          in: path
          description: 用户名
          required: true
          type: string
      responses:
        200:
          description: 用户名已被占用
        404:
          description: 用户名已被占用

  /invitecodes/:
    post:
      summary: 生成邀请码
      description: |
        根据请求生成邀请码
      tags:
        - misc
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateInviteCodeRequest'
      responses:
        201:
          description: 成功生成邀请码
          schema:
            $ref: '#/definitions/InviteCode'
        400: &400
          description: 无效请求
          schema:
            $ref: '#/definitions/Error'
        401: &401
          description: 未认证
          schema:
            $ref: '#/definitions/Error'
        403: &403
          description: 无访问权限
          schema:
            $ref: '#/definitions/Error'
        500: &500
          description: 服务端内部错误
          schema:
            $ref: '#/definitions/Error'

  /invitecodes/{id}/:
    get:
      summary: 查询邀请码
      description: |
        得到指定邀请码的具体信息
      tags:
        - misc
      parameters:
        - &InviteCodeIdPara
          name: id
          in: path
          description: 邀请码ID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: 成功查询邀请码
          schema:
            $ref: '#/definitions/InviteCode'
        404: &404
          description: 没找到指定对象
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: 删除邀请码
      description: |
        删除指定邀请码，后端采用懒删除，只是将状态设成已删除，数据将根据一定物理策略删除
      tags:
        - misc
      parameters:
        - *InviteCodeIdPara
      responses:
        200:
          description: 成功删除邀请码
          schema:
            $ref: '#/definitions/InviteCode'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500
    put:
      summary: 更新邀请码
      description: |
        根据请求中指定要更新的属性对邀请码进行更新
      tags:
        - misc
      parameters:
        - *InviteCodeIdPara
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateInviteCodeRequest'
      responses:
        200:
          description: 成功更新邀请码
          schema:
            $ref: '#/definitions/InviteCode'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500

  /users/:
    get:
      summary: 查看用户列表
      description: |
        查看所有用户，支持分页和过滤器
      parameters:
        - name: page
          in: path
          description: 当前页码
          required: true
          type: integer
          minimum: 1
        - name: pageSize
          in: path
          description: 每页项数
          required: true
          type: integer
          minimum: 1
        - name: startupId
          in: path
          description: 创业公司ID
          required: false
          type: integer
          format: int64
        - name: name
          in: path
          description: 用户姓名
          required: false
          type: string
        - name: role
          in: path
          description: 用户角色类型
          required: false
          type: string
        - name: status
          in: path
          description: 用户状态
          required: false
          type: string
      tags:
        - user
      responses:
        200: &PageResponse
          description: 资源列表
          schema:
            $ref: '#/definitions/PagableResult'

    post:
      summary: 创建用户
      description: |
        根据请求创建用户
      tags:
        - user
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        201:
          description: 成功创建用户
          schema:
            $ref: '#/definitions/User'
        400: &400
          description: 无效请求
          schema:
            $ref: '#/definitions/Error'
        401: &401
          description: 未认证
          schema:
            $ref: '#/definitions/Error'
        403: &403
          description: 无访问权限
          schema:
            $ref: '#/definitions/Error'
        500: &500
          description: 服务端内部错误
          schema:
            $ref: '#/definitions/Error'

  /users/{id}/:
    get:
      summary: 查询用户
      description: |
        得到指定用户的具体信息
      tags:
        - user
      parameters:
        - &UserIdPara
          name: id
          in: path
          description: 用户ID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: 成功查询用户
          schema:
            $ref: '#/definitions/User'
        404: &404
          description: 没找到指定对象
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: 删除用户
      description: |
        删除指定用户，后端采用懒删除，只是将状态设成已删除，数据将根据一定物理策略删除
      tags:
        - user
      parameters:
        - *UserIdPara
      responses:
        200:
          description: 成功删除用户
          schema:
            $ref: '#/definitions/User'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500
    put:
      summary: 更新用户
      description: |
        根据请求中指定要更新的属性对用户进行更新

        Example:
        1. 更新用户姓名和邮件
            ```json
            {
              "name":"newName",
              "email": "new@email.com"
            }
            ```
      tags:
        - user
      parameters:
        - *UserIdPara
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
      responses:
        200:
          description: 成功更新用户
          schema:
            $ref: '#/definitions/User'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500

  /startups/:
    get:
      summary: 查看创业公司列表
      description: |
        查看所有创业公司，支持分页和过滤器
      parameters:
        - name: page
          in: path
          description: 当前页码
          required: true
          type: integer
          minimum: 1
        - name: pageSize
          in: path
          description: 每页项数
          required: true
          type: integer
          minimum: 1
        - name: name
          in: path
          description: 创业公司名称
          required: false
          type: string
      tags:
        - startup
      responses:
        200: *PageResponse
    post:
      summary: 创建创业公司
      description: |
        根据请求创建创业公司
      tags:
        - startup
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateStartupRequest'
      responses:
        201:
          description: 成功创建创业公司
          schema:
            $ref: '#/definitions/Startup'
        400: *400
        401: *401
        403: *403
        500: *500

  /startups/{id}/:
    get:
      summary: 查询创业公司
      description: |
        得到指定创业公司的具体信息
      tags:
        - startup
      parameters:
        - &StartupIdPara
          name: id
          in: path
          description: 创业公司ID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: 成功查询创业公司
          schema:
            $ref: '#/definitions/Startup'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500
    delete:
      summary: 删除创业公司
      description: |
        删除指定创业公司，后端采用懒删除，只是将状态设成已删除，数据将根据一定物理策略删除
      tags:
        - startup
      parameters:
        - *StartupIdPara
      responses:
        200:
          description: 成功删除创业公司
          schema:
            $ref: '#/definitions/Startup'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500
    put:
      summary: 更新创业公司
      description: |
        根据请求中指定要更新的属性对创业公司进行更新
      tags:
        - startup
      parameters:
        - *StartupIdPara
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateStartupRequest'
      responses:
        200:
          description: 成功更新创业公司
          schema:
            $ref: '#/definitions/Startup'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500

  /founders/:
    get:
      summary: 查看创始人列表
      description: |
        查看所有创始人，支持分页和过滤器
      parameters:
        - name: page
          in: path
          description: 当前页码
          required: true
          type: integer
          minimum: 1
        - name: pageSize
          in: path
          description: 每页项数
          required: true
          type: integer
          minimum: 1
        - name: name
          in: path
          description: 创始人名称
          required: false
          type: string
        - name: startupId
          in: path
          description: 创业公司ID
          required: false
          type: integer
          format: int64
      tags:
        - founder
      responses:
        200: *PageResponse
    post:
      summary: 创建创始人
      description: |
        根据请求创建创始人
      tags:
        - founder
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFounderRequest'
      responses:
        201:
          description: 成功创建创始人
          schema:
            $ref: '#/definitions/Founder'
        400: *400
        401: *401
        403: *403
        500: *500

  /founders/{id}/:
    get:
      summary: 查询创始人
      description: |
        得到指定创始人的具体信息
      tags:
        - founder
      parameters:
        - &FounderIdPara
          name: id
          in: path
          description: 创始人ID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: 成功查询创始人
          schema:
            $ref: '#/definitions/Founder'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500
    delete:
      summary: 删除创始人
      description: |
        删除指定创始人，后端采用懒删除，只是将状态设成已删除，数据将根据一定物理策略删除
      tags:
        - founder
      parameters:
        - *FounderIdPara
      responses:
        200:
          description: 成功删除创始人
          schema:
            $ref: '#/definitions/Founder'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500
    put:
      summary: 更新创始人
      description: |
        根据请求中指定要更新的属性对创始人进行更新
      tags:
        - founder
      parameters:
        - *FounderIdPara
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFounderRequest'
      responses:
        200:
          description: 成功更新创始人
          schema:
            $ref: '#/definitions/Founder'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500

  /topics/:
    get:
      summary: 查看主题列表
      description: |
        查看所有主题，支持分页和过滤器
      parameters:
        - name: page
          in: path
          description: 当前页码
          required: true
          type: integer
          minimum: 1
        - name: pageSize
          in: path
          description: 每页项数
          required: true
          type: integer
          minimum: 1
        - name: userId
          in: path
          description: 主题发布者ID
          required: false
          type: integer
          format: int64
        - name: title
          in: path
          description: 主题标题
          required: false
          type: string
        - name: category
          in: path
          description: 主题类别
          required: false
          type: string
      tags:
        - topic
      responses:
        200: *PageResponse
    post:
      summary: 创建主题
      description: |
        根据请求创建主题
      tags:
        - topic
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTopicRequest'
      responses:
        201:
          description: 成功创建主题
          schema:
            $ref: '#/definitions/Topic'
        400: *400
        401: *401
        403: *403
        500: *500

  /topics/{id}/:
    get:
      summary: 查询主题
      description: |
        得到指定主题的具体信息
      tags:
        - topic
      parameters:
        - &TopicIdPara
          name: id
          in: path
          description: 主题ID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: 成功查询主题
          schema:
            $ref: '#/definitions/Topic'
        404: *404
    delete:
      summary: 删除主题
      description: |
        删除指定主题，后端采用懒删除，只是将状态设成已删除，数据将根据一定物理策略删除
      tags:
        - topic
      parameters:
        - *TopicIdPara
      responses:
        200:
          description: 成功删除主题
          schema:
            $ref: '#/definitions/Topic'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500
    put:
      summary: 更新主题
      description: |
        根据请求中指定要更新的属性对主题进行更新
      tags:
        - topic
      parameters:
        - *TopicIdPara
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTopicRequest'
      responses:
        200:
          description: 成功更新主题
          schema:
            $ref: '#/definitions/Topic'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500

  /replies/:
    get:
      summary: 查看回复列表
      description: |
        查看所有回复，支持分页和过滤器
      parameters:
        - name: page
          in: path
          description: 当前页码
          required: true
          type: integer
          minimum: 1
        - name: pageSize
          in: path
          description: 每页项数
          required: true
          type: integer
          minimum: 1
        - name: title
          in: path
          description: 回复标题
          required: false
          type: string
        - name: userId
          in: path
          description: 回复发布者ID
          required: false
          type: integer
          format: int64
        - name: topicId
          in: path
          description: 回复的主题ID
          required: false
          type: integer
          format: int64
      tags:
        - reply
      responses:
        200: *PageResponse
    post:
      summary: 创建回复
      description: |
        根据请求创建回复
      tags:
        - reply
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTopicRequest'
      responses:
        201:
          description: 成功创建回复
          schema:
            $ref: '#/definitions/Reply'
        400: *400
        401: *401
        403: *403
        500: *500

  /replies/{id}/:
    get:
      summary: 查询回复
      description: |
        得到指定回复的具体信息
      tags:
        - reply
      parameters:
        - &ReplyIdPara
          name: id
          in: path
          description: 回复ID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: 成功查询回复
          schema:
            $ref: '#/definitions/Reply'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500
    delete:
      summary: 删除回复
      description: |
        删除指定回复，后端采用懒删除，只是将状态设成已删除，数据将根据一定物理策略删除
      tags:
        - reply
      parameters:
        - *ReplyIdPara
      responses:
        200:
          description: 成功删除回复
          schema:
            $ref: '#/definitions/Reply'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500
    put:
      summary: 更新回复
      description: |
        根据请求中指定要更新的属性对回复进行更新
      tags:
        - reply
      parameters:
        - *ReplyIdPara
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateReplyRequest'
      responses:
        200:
          description: 成功更新回复
          schema:
            $ref: '#/definitions/Reply'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500

  /comments/:
    get:
      summary: 查看评论列表
      description: |
        查看所有评论，支持分页和过滤器
      parameters:
        - name: page
          in: path
          description: 当前页码
          required: true
          type: integer
          minimum: 1
        - name: pageSize
          in: path
          description: 每页项数
          required: true
          type: integer
          minimum: 1
        - name: userId
          in: path
          description: 评论发布者ID
          required: false
          type: integer
          format: int64
        - name: topicId
          in: path
          description: 评论的主题ID
          required: false
          type: integer
          format: int64
        - name: topicId
          in: path
          description: 评论的回复ID
          required: false
          type: integer
          format: int64
      tags:
        - comment
      responses:
        200: *PageResponse
    post:
      summary: 创建评论
      description: |
        根据请求创建评论
      tags:
        - comment
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCommentRequest'
      responses:
        201:
          description: 成功创建评论
          schema:
            $ref: '#/definitions/Comment'
        400: *400
        401: *401
        403: *403
        500: *500

  /comments/{id}/:
    get:
      summary: 查询评论
      description: |
        得到指定评论的具体信息
      tags:
        - comment
      parameters:
        - &CommentIdPara
          name: id
          in: path
          description: 评论ID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: 成功查询评论
          schema:
            $ref: '#/definitions/Comment'
        404: *404
    delete:
      summary: 删除评论
      description: |
        删除指定评论，后端采用懒删除，只是将状态设成已删除，数据将根据一定物理策略删除
      tags:
        - comment
      parameters:
        - *CommentIdPara
      responses:
        200:
          description: 成功删除评论
          schema:
            $ref: '#/definitions/Comment'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500
    put:
      summary: 更新评论
      description: |
        根据请求中指定要更新的属性对评论进行更新
      tags:
        - comment
      parameters:
        - *CommentIdPara
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCommentRequest'
      responses:
        200:
          description: 成功更新评论
          schema:
            $ref: '#/definitions/Comment'
        400: *400
        401: *401
        403: *403
        404: *404
        500: *500

definitions:
  AuthenticationRequest:
    description:
      表示认证请求
    required:
      - email
      - password
    properties:
      email:
        description: 用户注册的email地址
        type: string
      password:
        description: 密码，需加密，不可明文传输
        type: string
      expiredTime:
        description: token失效时间, 单位为分钟
        type: integer

  AuthenticationResponse:
    description:
      表示认证响应
    properties:
      token:
        description: 访问token
        type: string
      expiresIn:
        description: token失效时间
        type: string

  PagableResult:
    description: 资源列表的一页结果
    properties:
      totalPages:
        description: 总共页数
        type: integer
      totalElements:
        description: 总共资源项数
        type: integer
      last:
        description: 是否最后一页
        type: boolean
      last:
        description: 是否第一页
        type: boolean
      size:
        description: 每页资源项数
        type: integer
      number:
        description: 当前页数
        type: integer
      numberOfElements:
        description: 当前页资源项数
        type: integer

  User:
    description:
      表示用户资源
    properties:
      id:
        description: 用户ID，由后端自动生成，创建用户时不需要
        type: integer
        format: int64
      inviteCode:
        description: 使用的邀请码
        type: string
      name:
        description: 用户姓名
        type: string
      password:
        description: 用户密码，仅在创建用户时需要提供，并需加密
        type: string
      phone:
        description: 用户电话号码
        type: string
      email:
        description: 用户邮件地址
        type: string
      role:
        description: 用户角色，目前可能为ROOT, ADMIN, EMPLOYEE, INTERNAL_EXPERT, EXTERNAL_EXPERT五种
        type: string
        enum:
          - ROOT
          - ADMIN
          - EMPLOYEE
          - INTERNAL_EXPERT
          - EXTERNAL_EXPERT
      startupId:
        description: 用户所属的创业公司ID，如为专家或根用户，则此项为空
        type: integer
        format: int64
      ctocoins:
        description: 拥有的悬赏分
        type: integer
      createdAt:
        description: 创建时间
        type: string
        format: date-time
      modifiedAt:
        description: 最近一次修改时间
        type: string
        format: date-time
      status:
        description: 用户状态
        type: string
        enum:
          - NEW
          - REVIEWING
          - REJECTED
          - APPROVED
          - DELETED

  CreateUserRequest:
    description:
      表示创建用户请求
    required:
      - name
      - password
      - email
      - role
    properties:
      inviteCode:
        description: 使用的邀请码
        type: string
      name:
        description: 用户姓名
        type: string
      password:
        description: 用户密码，仅在创建用户时需要提供，并需加密
        type: string
      phone:
        description: 用户电话号码
        type: string
      email:
        description: 用户邮件地址
        type: string
      role:
        description: 用户角色，目前可能为ROOT, ADMIN, EMPLOYEE, INTERNAL_EXPERT, EXTERNAL_EXPERT五种
        type: string
        enum:
          - ROOT
          - ADMIN
          - EMPLOYEE
          - INTERNAL_EXPERT
          - EXTERNAL_EXPERT
      startupId:
        description: 用户所属的创业公司ID，如为专家或根用户，则此项为空
        type: integer
        format: int64
      ctocoins:
        description: 拥有的悬赏分
        type: integer

  UpdateUserRequest:
    description:
      表示更新用户请求
    properties:
      name:
        description: 用户姓名
        type: string
      password:
        description: 用户密码，仅在创建用户时需要提供，并需加密
        type: string
      phone:
        description: 用户电话号码
        type: string
      email:
        description: 用户邮件地址
        type: string
      role:
        description: 用户角色，目前可能为ROOT, ADMIN, EMPLOYEE, INTERNAL_EXPERT, EXTERNAL_EXPERT五种
        type: string
        enum:
          - ROOT
          - ADMIN
          - EMPLOYEE
          - INTERNAL_EXPERT
          - EXTERNAL_EXPERT
      startupId:
        description: 用户所属的创业公司ID，如为专家或根用户，则此项为空
        type: integer
        format: int64
      ctocoins:
        description: 拥有的悬赏分
        type: integer
      status:
        description: 用户状态
        type: string
        enum:
          - NEW
          - REVIEWING
          - REJECTED
          - APPROVED
          - DELETED

  Startup:
    description:
      表示创业公司资源
    properties:
      id:
        description: 创业公司ID，由后端自动生成，创建创业公司时不需要
        type: integer
        format: int64
      name:
        description: 创业公司名称
        type: string
      corpName:
        description: 创业公司注册名称
        type: string
      startYear:
        description: 创业公司创始年份
        type: integer
      startMonth:
        description: 创业公司创始月份
        type: integer
      productName:
        description: 创业公司产品名称
        type: string
      productDesc:
        description: 创业公司产品描述
        type: string
      location:
        description: 创业公司地址
        type: string
      scope:
        description: 创业公司经营范围
        type: string
      phase:
        description: 创业公司融资阶段
        type: string
      intro:
        description: 创业公司介绍
        type: string
      corpIdPhoto:
        description: 创业公司照片地址
        type: string
      logo:
        description: 创业公司Logo图片地址
        type: string
      adminId:
        description: 创业公司管理员ID
        type: integer
        format: int64
      createdAt:
        description: 创建时间
        type: string
        format: date-time
      modifiedAt:
        description: 最近一次修改时间
        type: string
        format: date-time

  CreateStartupRequest:
    description:
      表示创建创业公司请求
    required:
      - name
    properties:
      name:
        description: 创业公司名称
        type: string
      corpName:
        description: 创业公司注册名称
        type: string
      startYear:
        description: 创业公司创始年份
        type: integer
      startMonth:
        description: 创业公司创始月份
        type: integer
      productName:
        description: 创业公司产品名称
        type: string
      productDesc:
        description: 创业公司产品描述
        type: string
      location:
        description: 创业公司地址
        type: string
      scope:
        description: 创业公司经营范围
        type: string
      phase:
        description: 创业公司融资阶段
        type: string
      intro:
        description: 创业公司介绍
        type: string
      corpIdPhoto:
        description: 创业公司照片地址
        type: string
      logo:
        description: 创业公司Logo图片地址
        type: string
      adminId:
        description: 创业公司管理员ID
        type: integer
        format: int64

  UpdateStartupRequest:
    description:
      表示更新创业公司请求
    properties:
      name:
        description: 创业公司名称
        type: string
      corpName:
        description: 创业公司注册名称
        type: string
      startYear:
        description: 创业公司创始年份
        type: integer
      startMonth:
        description: 创业公司创始月份
        type: integer
      productName:
        description: 创业公司产品名称
        type: string
      productDesc:
        description: 创业公司产品描述
        type: string
      location:
        description: 创业公司地址
        type: string
      scope:
        description: 创业公司经营范围
        type: string
      phase:
        description: 创业公司融资阶段
        type: string
      intro:
        description: 创业公司介绍
        type: string
      corpIdPhoto:
        description: 创业公司照片地址
        type: string
      logo:
        description: 创业公司Logo图片地址
        type: string
      adminId:
        description: 创业公司管理员ID
        type: integer
        format: int64

  Founder:
    description:
      表示创业人资源
    properties:
      id:
        description: 创业人ID，由后端自动生成，创建创业人时不需要
        type: integer
        format: int64
      name:
        description: 创始人姓名
        type: string
      position:
        description: 创始人职位
        type: string
      email:
        description: 创始人邮件地址
        type: string
      intro:
        description: 创始人介绍
        type: string
      startupId:
        description: 创业公司ID
        type: integer
        format: int64
      createdAt:
        description: 创建时间
        type: string
        format: date-time
      modifiedAt:
        description: 最近一次修改时间
        type: string
        format: date-time

  CreateFounderRequest:
    description:
      表示创建创业人请求
    required:
      - name
      - startupId
    properties:
      name:
        description: 创始人姓名
        type: string
      position:
        description: 创始人职位
        type: string
      email:
        description: 创始人邮件地址
        type: string
      intro:
        description: 创始人介绍
        type: string
      startupId:
        description: 创业公司ID
        type: integer
        format: int64

  UpdateFounderRequest:
    description:
      表示更新创业人请求
    properties:
      name:
        description: 创始人姓名
        type: string
      position:
        description: 创始人职位
        type: string
      email:
        description: 创始人邮件地址
        type: string
      intro:
        description: 创始人介绍
        type: string
      startupId:
        description: 创业公司ID
        type: integer
        format: int64

  Topic:
    description:
      表示主题资源
    properties:
      id:
        description: 主题ID，由后端自动生成，创建主题时不需要
        type: integer
        format: int64
      userId:
        description: 主题发布者
        type: integer
        format: int64
      startupId:
        description: 主题发布者所属创业公司
        type: integer
        format: int64
      title:
        description: 主题标题
        type: string
      content:
        description: 主题内容
        type: string
      ctocoins:
        description: 主题悬赏分
        type: integer
      category:
        description: 主题类别
        type: string
      labels:
        description: 主题标签
        type: array
        items:
          type: string
      confirmed:
        description: 主题是否已有回复被发布者采纳
        type: boolean
      createdAt:
        description: 创建时间
        type: string
        format: date-time
      modifiedAt:
        description: 最近一次修改时间
        type: string
        format: date-time

  CreateTopicRequest:
    description:
      表示创建主题请求
    required:
      - userId
      - title
    properties:
      userId:
        description: 主题发布者
        type: integer
        format: int64
      startupId:
        description: 主题发布者所属创业公司
        type: integer
        format: int64
      title:
        description: 主题标题
        type: string
      content:
        description: 主题内容
        type: string
      ctocoins:
        description: 主题悬赏分
        type: integer
      category:
        description: 主题类别
        type: string
      labels:
        description: 主题标签
        type: array
        items:
          type: string

  UpdateTopicRequest:
    description:
      表示更新主题请求
    properties:
      userId:
        description: 主题发布者
        type: integer
        format: int64
      startupId:
        description: 主题发布者所属创业公司
        type: integer
        format: int64
      title:
        description: 主题标题
        type: string
      content:
        description: 主题内容
        type: string
      ctocoins:
        description: 主题悬赏分
        type: integer
      category:
        description: 主题类别
        type: string
      labels:
        description: 主题标签
        type: array
        items:
          type: string
      confirmed:
        description: 主题是否已有回复被发布者采纳
        type: boolean

  Reply:
    description:
      表示回复资源
    properties:
      id:
        description: 回复ID，由后端自动生成，创建时不需要
        type: integer
        format: int64
      userId:
        description: 回复发布者
        type: integer
        format: int64
      title:
        description: 回复标题
        type: string
      content:
        description: 回复内容
        type: string
      topicId:
        description: 回复主题的ID
        type: integer
        format: int64
      createdAt:
        description: 创建时间
        type: string
        format: date-time
      modifiedAt:
        description: 最近一次修改时间
        type: string
        format: date-time

  CreateReplyRequest:
    description:
      表示创建回复请求
    required:
      - userId
      - topicId
    properties:
      userId:
        description: 回复发布者
        type: integer
        format: int64
      title:
        description: 回复标题
        type: string
      content:
        description: 回复内容
        type: string
      topicId:
        description: 回复主题的ID
        type: integer
        format: int64

  UpdateReplyRequest:
    description:
      表示更新回复请求
    properties:
      userId:
        description: 回复发布者
        type: integer
        format: int64
      title:
        description: 回复标题
        type: string
      content:
        description: 回复内容
        type: string
      topicId:
        description: 回复主题的ID
        type: integer
        format: int64

  Comment:
    description: 表示评论资源
    properties:
      id:
        description: 评论ID，由后端自动生成，创建时不需要
        type: integer
        format: int64
      userId:
        description: 评论发布者
        type: integer
        format: int64
      content:
        description: 评论内容
        type: string
      topicId:
        description: 评论主题的ID
        type: integer
        format: int64
      replyId:
        description: 评论主题的ID
        type: integer
        format: int64
      createdAt:
        description: 创建时间
        type: string
        format: date-time
      modifiedAt:
        description: 最近一次修改时间
        type: string
        format: date-time

  CreateCommentRequest:
    description: 表示创建评论请求
    required:
      - userId
    properties:
      userId:
        description: 评论发布者
        type: integer
        format: int64
      content:
        description: 评论内容
        type: string
      topicId:
        description: 评论主题的ID
        type: integer
        format: int64
      replyId:
        description: 评论主题的ID
        type: integer
        format: int64

  UpdateCommentRequest:
    description: 表示更新评论请求
    properties:
      userId:
        description: 评论发布者
        type: integer
        format: int64
      content:
        description: 评论内容
        type: string
      topicId:
        description: 评论主题的ID
        type: integer
        format: int64
      replyId:
        description: 评论主题的ID
        type: integer
        format: int64

  SendEmailRequest:
    description: 表示发送邮件请求
    properties:
      subject:
        description: 标题
        type: string
      body:
        description: 正文
        type: string
      to:
        description: 收件人
        type: array
        items:
          type: string
      cc:
        description: 抄送人
        type: array
        items:
          type: string

  InviteCode:
    description: 表示邀请码资源
    properties:
      id:
        description: 邀请码ID，由后端自动生成，创建时不需要
        type: integer
        format: int64
      code:
        description: 邀请码
        type: string
      type:
        description: 邀请码类型, 和用户role匹配
        type: string
        enum:
          - EMPLOYEE
          - INTERNAL_EXPERT
          - EXTERNAL_EXPERT
      inviterId:
        description: 邀请者ID
        type: integer
        format: int64
      startupId:
        description: 创业公司ID
        type: integer
        format: int64
      quota:
        description: 配额
        type: integer
      used:
        description: 已使用额度
        type: integer
      createdAt:
        description: 创建时间
        type: string
        format: date-time
      modifiedAt:
        description: 最近一次修改时间
        type: string
        format: date-time

  CreateInviteCodeRequest:
    description: 表示创建邀请码请求
    required:
      - code
      - type
      - quota
    properties:
      code:
        description: 邀请码
        type: string
      type:
        description: 邀请码类型, 和用户role匹配
        type: string
        enum:
          - EMPLOYEE
          - INTERNAL_EXPERT
          - EXTERNAL_EXPERT
      inviterId:
        description: 邀请者ID
        type: integer
        format: int64
      startupId:
        description: 创业公司ID
        type: integer
        format: int64
      quota:
        description: 配额
        type: integer

  UpdateInviteCodeRequest:
    description: 表示更新邀请码请求
    properties:
      type:
        description: 邀请码类型, 和用户role匹配
        type: string
        enum:
          - EMPLOYEE
          - INTERNAL_EXPERT
          - EXTERNAL_EXPERT
      inviterId:
        description: 邀请者ID
        type: integer
        format: int64
      startupId:
        description: 创业公司ID
        type: integer
        format: int64
      quota:
        description: 配额
        type: integer
      used:
        description: 已使用额度
        type: integer

  Error:
    properties:
      code:
        description: 错误代码
        type: string
      message:
        description: 错误信息
        type: string
